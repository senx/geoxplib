//
//   GeoXP Lib, library for efficient geo data manipulation
//
//   Copyright 2020-2021  SenX S.A.S.
//   Copyright 2019-2020  iroise.net S.A.S.
//   Copyright 1999-2019  Mathias Herberts
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '4.0.3'
  id 'eclipse'
  id 'idea'
  id 'signing'
  id 'maven-publish'
}

sourceCompatibility = 1.6
targetCompatibility = 1.6

configurations {
  compile
  runtime { extendsFrom compile }
}

//
// Repositories for dependency resolution
//

repositories {
  mavenCentral()
  maven {
    url "http://repo.opengeo.org/"
  }
}

//
// Java Compilation flags
//

compileJava {
  options.compilerArgs << '-g:none'
}

//
// Project dependencies
//

dependencies {
  testCompile 'junit:junit:4.6'

  compile group: 'com.fasterxml.util', name: 'java-merge-sort', version: '1.0.0'
  compile group: 'net.sf.trove4j', name: 'trove4j', version: '3.0.3'
  compile group: 'com.vividsolutions', name: 'jts', version: '1.13'
}

sourceSets {
  main {
    java {
      srcDir 'src/main/java'
    }
  }
}

def getVersionName = { ->
  def stdout = new ByteArrayOutputStream()
  exec {
    commandLine 'git', 'describe', '--tags', '--always'
    standardOutput = stdout
  }
  return stdout.toString().trim()
}

task sourceJar(type: Jar) {
  archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
  archiveClassifier = "javadoc"
}

publishing {
  publications {
    geoxplib(MavenPublication) {
      from components.java
      groupId 'io.senx'
      artifactId 'geoxplib'
      version getVersionName()
      pom {
        name = 'GeoXP Lib'
        // optionally artifactId can be defined here
        description = 'A java library for efficient Geo data manipulation'
        url = 'https://github.com/senx/geoxplib'

        scm {
          connection = 'scm:git:git://github.com/senx/geoxplib.git'
          developerConnection = 'scm:git:git://github.com/senx/geoxplib.git'
          url = 'https://github.com/senx/geoxplib'
        }

        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }

        developers {
          developer {
            id = 'senx'
            name = 'SenX'
            email = 'contact@senx.io'
          }
        }
      }
    }
  }
  repositories {
    if (project.hasProperty('ossrhUsername')) {
      maven {
        def stagingRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
        def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
        url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : stagingRepoUrl

        credentials {
          username = ossrhUsername
          password = ossrhPassword
        }
      }
    }
  }
}


java {
  withJavadocJar()
  withSourcesJar()
}

javadoc {
  source = sourceSets.main.allJava
  classpath = configurations.compileClasspath

  options
  {
    setMemberLevel JavadocMemberLevel.PUBLIC
    setAuthor true

    links "https://docs.oracle.com/javase/8/docs/api/"
  }
}

signing {
  useGpgCmd()
  sign publishing.publications.geoxplib
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
